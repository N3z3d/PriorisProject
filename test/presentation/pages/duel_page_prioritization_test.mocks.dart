// Mocks generated by Mockito 5.4.5 from annotations
// in prioris/test/presentation/pages/duel_page_prioritization_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:prioris/data/repositories/custom_list_repository.dart' as _i8;
import 'package:prioris/data/repositories/list_item_repository.dart' as _i11;
import 'package:prioris/data/repositories/task_repository.dart' as _i2;
import 'package:prioris/domain/models/core/entities/custom_list.dart' as _i9;
import 'package:prioris/domain/models/core/entities/list_item.dart' as _i5;
import 'package:prioris/domain/models/core/entities/task.dart' as _i7;
import 'package:prioris/domain/models/core/enums/list_enums.dart' as _i10;
import 'package:prioris/domain/services/core/lists_filter_service.dart' as _i12;
import 'package:prioris/domain/task/services/list_item_task_converter.dart'
    as _i3;
import 'package:prioris/domain/task/services/unified_prioritization_service.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTaskRepository_0 extends _i1.SmartFake
    implements _i2.TaskRepository {
  _FakeTaskRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListItemTaskConverter_1 extends _i1.SmartFake
    implements _i3.ListItemTaskConverter {
  _FakeListItemTaskConverter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuelResult_2 extends _i1.SmartFake implements _i4.DuelResult {
  _FakeDuelResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListItem_3 extends _i1.SmartFake implements _i5.ListItem {
  _FakeListItem_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UnifiedPrioritizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUnifiedPrioritizationService extends _i1.Mock
    implements _i4.UnifiedPrioritizationService {
  @override
  _i2.TaskRepository get taskRepository => (super.noSuchMethod(
        Invocation.getter(#taskRepository),
        returnValue: _FakeTaskRepository_0(
          this,
          Invocation.getter(#taskRepository),
        ),
        returnValueForMissingStub: _FakeTaskRepository_0(
          this,
          Invocation.getter(#taskRepository),
        ),
      ) as _i2.TaskRepository);

  @override
  _i3.ListItemTaskConverter get converter => (super.noSuchMethod(
        Invocation.getter(#converter),
        returnValue: _FakeListItemTaskConverter_1(
          this,
          Invocation.getter(#converter),
        ),
        returnValueForMissingStub: _FakeListItemTaskConverter_1(
          this,
          Invocation.getter(#converter),
        ),
      ) as _i3.ListItemTaskConverter);

  @override
  _i6.Future<List<_i7.Task>> getTasksForPrioritization() => (super.noSuchMethod(
        Invocation.method(
          #getTasksForPrioritization,
          [],
        ),
        returnValue: _i6.Future<List<_i7.Task>>.value(<_i7.Task>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i7.Task>>.value(<_i7.Task>[]),
      ) as _i6.Future<List<_i7.Task>>);

  @override
  List<_i7.Task> getListItemsAsTasks(List<_i5.ListItem>? listItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #getListItemsAsTasks,
          [listItems],
        ),
        returnValue: <_i7.Task>[],
        returnValueForMissingStub: <_i7.Task>[],
      ) as List<_i7.Task>);

  @override
  List<_i7.Task>? createDuelFromListItems(List<_i5.ListItem>? listItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDuelFromListItems,
          [listItems],
        ),
        returnValueForMissingStub: null,
      ) as List<_i7.Task>?);

  @override
  _i6.Future<_i4.DuelResult> updateEloScoresFromDuel(
    _i7.Task? winner,
    _i7.Task? loser,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEloScoresFromDuel,
          [
            winner,
            loser,
          ],
        ),
        returnValue: _i6.Future<_i4.DuelResult>.value(_FakeDuelResult_2(
          this,
          Invocation.method(
            #updateEloScoresFromDuel,
            [
              winner,
              loser,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.DuelResult>.value(_FakeDuelResult_2(
          this,
          Invocation.method(
            #updateEloScoresFromDuel,
            [
              winner,
              loser,
            ],
          ),
        )),
      ) as _i6.Future<_i4.DuelResult>);

  @override
  _i5.ListItem convertTaskBackToListItem(
    _i7.Task? task, {
    String? listId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertTaskBackToListItem,
          [task],
          {#listId: listId},
        ),
        returnValue: _FakeListItem_3(
          this,
          Invocation.method(
            #convertTaskBackToListItem,
            [task],
            {#listId: listId},
          ),
        ),
        returnValueForMissingStub: _FakeListItem_3(
          this,
          Invocation.method(
            #convertTaskBackToListItem,
            [task],
            {#listId: listId},
          ),
        ),
      ) as _i5.ListItem);
}

/// A class which mocks [CustomListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomListRepository extends _i1.Mock
    implements _i8.CustomListRepository {
  @override
  _i6.Future<List<_i9.CustomList>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<_i9.CustomList?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i6.Future<_i9.CustomList?>.value(),
        returnValueForMissingStub: _i6.Future<_i9.CustomList?>.value(),
      ) as _i6.Future<_i9.CustomList?>);

  @override
  _i6.Future<void> save(_i9.CustomList? list) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [list],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> update(_i9.CustomList? list) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [list],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i9.CustomList>> getAllLists() => (super.noSuchMethod(
        Invocation.method(
          #getAllLists,
          [],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<_i9.CustomList?> getListById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getListById,
          [id],
        ),
        returnValue: _i6.Future<_i9.CustomList?>.value(),
        returnValueForMissingStub: _i6.Future<_i9.CustomList?>.value(),
      ) as _i6.Future<_i9.CustomList?>);

  @override
  _i6.Future<void> saveList(_i9.CustomList? list) => (super.noSuchMethod(
        Invocation.method(
          #saveList,
          [list],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateList(_i9.CustomList? list) => (super.noSuchMethod(
        Invocation.method(
          #updateList,
          [list],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteList(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteList,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i9.CustomList>> searchByName(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByName,
          [query],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<List<_i9.CustomList>> searchByDescription(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByDescription,
          [query],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<List<_i9.CustomList>> searchListsByName(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchListsByName,
          [query],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<List<_i9.CustomList>> searchListsByDescription(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchListsByDescription,
          [query],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<List<_i9.CustomList>> getByType(_i10.ListType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByType,
          [type],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<List<_i9.CustomList>> getListsByType(_i10.ListType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getListsByType,
          [type],
        ),
        returnValue: _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.CustomList>>.value(<_i9.CustomList>[]),
      ) as _i6.Future<List<_i9.CustomList>>);

  @override
  _i6.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearAllLists() => (super.noSuchMethod(
        Invocation.method(
          #clearAllLists,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ListItemRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockListItemRepository extends _i1.Mock
    implements _i11.ListItemRepository {
  @override
  _i6.Future<List<_i5.ListItem>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i6.Future<List<_i5.ListItem>>.value(<_i5.ListItem>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i5.ListItem>>.value(<_i5.ListItem>[]),
      ) as _i6.Future<List<_i5.ListItem>>);

  @override
  _i6.Future<_i5.ListItem?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i6.Future<_i5.ListItem?>.value(),
        returnValueForMissingStub: _i6.Future<_i5.ListItem?>.value(),
      ) as _i6.Future<_i5.ListItem?>);

  @override
  _i6.Future<_i5.ListItem> add(_i5.ListItem? item) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [item],
        ),
        returnValue: _i6.Future<_i5.ListItem>.value(_FakeListItem_3(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.ListItem>.value(_FakeListItem_3(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
      ) as _i6.Future<_i5.ListItem>);

  @override
  _i6.Future<_i5.ListItem> update(_i5.ListItem? item) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [item],
        ),
        returnValue: _i6.Future<_i5.ListItem>.value(_FakeListItem_3(
          this,
          Invocation.method(
            #update,
            [item],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.ListItem>.value(_FakeListItem_3(
          this,
          Invocation.method(
            #update,
            [item],
          ),
        )),
      ) as _i6.Future<_i5.ListItem>);

  @override
  _i6.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i5.ListItem>> getByListId(String? listId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByListId,
          [listId],
        ),
        returnValue: _i6.Future<List<_i5.ListItem>>.value(<_i5.ListItem>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i5.ListItem>>.value(<_i5.ListItem>[]),
      ) as _i6.Future<List<_i5.ListItem>>);
}

/// A class which mocks [ListsFilterService].
///
/// See the documentation for Mockito's code generation for more information.
class MockListsFilterService extends _i1.Mock
    implements _i12.ListsFilterService {
  @override
  List<_i9.CustomList> applyFilters(
    List<_i9.CustomList>? lists, {
    String? searchQuery = '',
    _i10.ListType? selectedType,
    bool? showCompleted = true,
    bool? showInProgress = true,
    String? selectedDateFilter,
    _i12.SortOption? sortOption = _i12.SortOption.NAME_ASC,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyFilters,
          [lists],
          {
            #searchQuery: searchQuery,
            #selectedType: selectedType,
            #showCompleted: showCompleted,
            #showInProgress: showInProgress,
            #selectedDateFilter: selectedDateFilter,
            #sortOption: sortOption,
          },
        ),
        returnValue: <_i9.CustomList>[],
        returnValueForMissingStub: <_i9.CustomList>[],
      ) as List<_i9.CustomList>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
