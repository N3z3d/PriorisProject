{
  "env": {
    "ORCHESTRATION_ENABLED": "true",
    "AUTO_AGENT_SELECTION": "true",
    "RESEARCH_FIRST": "true",
    "TRACK_PROGRESS": "true"
  },
  "permissions": {
    "allow": [
      "Bash(do echo \"=== $file ===\")",
      "Bash(do basename \"$file\" .dart)",
      "Read(//c/Users/**)",
      "Bash(tee:*)",
      "Bash(del /f testapplicationservicespersistencebackground_sync_service_test.dart)",
      "Bash(del /f testapplicationservicespersistencepersistence_operations_service_test.dart)",
      "Bash(del /f testapplicationservicespersistencepersistence_operations_service_test.mocks.dart)",
      "Bash(del /f testapplicationservicespersistencepersistence_strategy_manager_test.dart)",
      "Bash(findstr:*)",
      "Bash(do [ -f \"$file\" ])",
      "Bash(exit 0)",
      "Bash([ -d lib/presentation/pages/duel/services ])",
      "Bash(Select-String -Pattern \"(Compiling|Built|Error|habit_card)\")",
      "Bash(Select-Object -First 20)",
      "Bash(git reset:*)",
      "Read(//c/**)",
      "Bash(git log:*)",
      "Bash(echo:*)",
      "Bash(nc:*)",
      "Bash(git checkout:*)",
      "Bash(if exist \"lib\\presentation\\animations\\physics.dart\" git rm lib/presentation/animations/physics.dart)",
      "Bash(if exist \"lib\\presentation\\mixins\\text_controller_mixin.dart\" git rm lib/presentation/mixins/text_controller_mixin.dart)",
      "Bash(if exist \"lib\\presentation\\theme\\elevation_system.dart\" git rm lib/presentation/theme/elevation_system.dart)",
      "Bash(if exist \"lib\\presentation\\theme\\refactored_glassmorphism_system.dart\" git rm lib/presentation/theme/refactored_glassmorphism_system.dart)",
      "Bash(if exist \"lib\\presentation\\controllers\\base\\base_controller.dart\" git rm lib/presentation/controllers/base/base_controller.dart)",
      "Bash(cleanup_dead_code.bat)",
      "Bash(cmd /c:*)",
      "Bash(\"lib/domain/core/bounded_context.dart\" )",
      "Bash(\"lib/domain/core/events/event_bus.dart\" )",
      "Bash(\"lib/domain/habit/services/habit_analytics_service.dart\" )",
      "Bash(\"lib/domain/habit/specifications/habit_specifications.dart\" )",
      "Bash(\"lib/domain/list/services/list_optimization_service.dart\" )",
      "Bash(\"lib/domain/list/specifications/list_specifications.dart\" )",
      "Bash(\"lib/domain/list_management/value_objects/list_value_objects.dart\" )",
      "Bash(\"lib/domain/models/builders/list_item_builder.dart\" )",
      "Bash(\"lib/domain/services/navigation/navigation_error_handler.dart\" )",
      "Bash(\"lib/infrastructure/persistence/indexed_hive_repository.dart\" )",
      "Bash(\"lib/presentation/animations/staggered_animations.dart\" )",
      "Bash(\"lib/presentation/pages/duel/widgets/duel_header_widget.dart\" )",
      "Bash(\"lib/presentation/pages/duel/widgets/vs_separator_widget.dart\" )",
      "Bash(\"lib/presentation/pages/lists/widgets/list_filter_widget.dart\" )",
      "Bash(\"lib/presentation/pages/lists/widgets/list_filters_widget.dart\" )",
      "Bash(\"lib/presentation/pages/lists/widgets/list_integration_summary.dart\" )",
      "Bash(\"lib/presentation/widgets/advanced_loading_widget.dart\" )",
      "Bash(\"lib/application/list_management/commands/create_list_command.dart\")",
      "Bash(do )",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then echo \"EXISTS: $file\")",
      "Bash(fi)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "SessionStart": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "powershell -Command \"New-Item -ItemType Directory -Force -Path docs\\references, docs\\ADR, tests | Out-Null; Write-Host 'âœ… Project structure initialized'\""
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'ðŸ’¡ Consider running tests after code changes'"
          }
        ]
      }
    ]
  }
}